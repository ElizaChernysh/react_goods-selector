{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","chooseGoodsHandler","item","includes","setState","prevState","RemoveGoodsHandler","filter","element","this","length","join","slice","className","showGoodsHandler","type","onClick","resetSelectedGoods","map","classNames","active","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,cAAe,IAFnB,EAKEC,mBAAqB,SAACC,GACM,EAAKH,MAAvBC,cAEYG,SAASD,IAC3B,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAc,GAAD,mBAAMK,EAAUL,eAAhB,CAA+BE,SAVpD,EAeEI,mBAAqB,SAACJ,GACpB,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cACCK,EAAUL,cAAcO,QAAO,SAAAC,GAAO,OAAIA,IAAYN,UAlB7D,wDAsBE,WACEO,KAAKL,SAAS,CACZJ,cAAe,OAxBrB,8BA4BE,WACE,IAAQA,EAAkBS,KAAKV,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAcW,KAAK,SAA7B,iBAEF,QACE,MAAM,GAAN,OAAUX,EAAcY,MAAM,GAAI,GAAGD,KAAK,MAA1C,gBAAuDX,EAAcA,EAAcU,OAAS,GAA5F,oBA1CR,oBA8CE,WAAU,IAAD,OACCV,EAAkBS,KAAKV,MAAvBC,cAER,OACE,sBAAKa,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,UACGJ,KAAKK,mBACLd,EAAcU,OAAS,GAEpB,wBACEK,KAAK,SACLF,UAAU,oBACVG,QAAS,kBACP,EAAKC,sBAJT,kBAWN,oBAAIJ,UAAU,YAAd,SACGhB,EAAgBqB,KAAI,SAAChB,GAAD,OACnB,qBACEW,UAAWM,IACT,YACA,CACEC,OAAS,EAAKrB,MAAMC,cAAcG,SAASD,KAJjD,UASGA,EACD,gCACE,wBACEa,KAAK,SACLF,UAAU,qBACVG,QAAS,WACP,EAAKf,mBAAmBC,IAJ5B,iBASA,wBACEa,KAAK,SACLF,UAAU,qBACVG,QAAS,WACP,EAAKV,mBAAmBJ,IAJ5B,yBAbGA,eA3EnB,GAAyBmB,IAAMC,WA0GhBxB,IC3HfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.308f343c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[]\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  chooseGoodsHandler = (item: string) => {\n    const { selectedGoods } = this.state;\n\n    if (!(selectedGoods.includes(item))) {\n      this.setState(prevState => ({\n        selectedGoods: [...prevState.selectedGoods, item],\n      }));\n    }\n  };\n\n  RemoveGoodsHandler = (item: string) => {\n    this.setState(prevState => ({\n      selectedGoods:\n       prevState.selectedGoods.filter(element => element !== item),\n    }));\n  };\n\n  resetSelectedGoods() {\n    this.setState({\n      selectedGoods: [],\n    });\n  }\n\n  showGoodsHandler() {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      case 2:\n        return `${selectedGoods.join(' and ')} are selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {this.showGoodsHandler()}\n          {selectedGoods.length > 0\n            && (\n              <button\n                type=\"button\"\n                className=\"App__button-reset\"\n                onClick={() => (\n                  this.resetSelectedGoods()\n                )}\n              >\n                X\n              </button>\n            )}\n        </h1>\n        <ul className=\"App__list\">\n          {goodsFromServer.map((item: string) => (\n            <li\n              className={classNames(\n                'App__item',\n                {\n                  active: (this.state.selectedGoods.includes(item)),\n                },\n              )}\n              key={item}\n            >\n              {item}\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"App__button-choose\"\n                  onClick={() => {\n                    this.chooseGoodsHandler(item);\n                  }}\n                >\n                  Add\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"App__button-remove\"\n                  onClick={() => {\n                    this.RemoveGoodsHandler(item);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable import/no-named-as-default */\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}