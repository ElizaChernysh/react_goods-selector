{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","chooseGoodsHandler","item","includes","setState","prevState","RemoveGoodsHandler","filter","element","this","SelectedValues","length","className","showGoodsHandler","type","onClick","resetSelectedGoods","map","classNames","active","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,cAAe,IAFnB,EAKEC,mBAAqB,SAACC,GACM,EAAKH,MAAvBC,cAEYG,SAASD,IAC3B,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAc,GAAD,mBAAMK,EAAUL,eAAhB,CAA+BE,SAVpD,EAeEI,mBAAqB,SAACJ,GACpB,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cACCK,EAAUL,cAAcO,QAAO,SAAAC,GAAO,OAAIA,IAAYN,UAlB7D,wDAsBE,WACEO,KAAKL,SAAS,CACZJ,cAAe,OAxBrB,8BA4BE,WACE,IAAIU,EAAiB,GAErB,OAAQD,KAAKV,MAAMC,cAAcW,QAC/B,KAAK,EACHD,EAAc,UAAMD,KAAKV,MAAMC,cAAjB,gBACd,MAEF,KAAK,EACHU,EAAc,UAAMD,KAAKV,MAAMC,cAAc,GAA/B,gBAAyCS,KAAKV,MAAMC,cAAc,GAAlE,iBACd,MAEF,KAAK,EACHU,EAAc,UAAMD,KAAKV,MAAMC,cAAc,GAA/B,YAAqCS,KAAKV,MAAMC,cAAc,GAA9D,iBAAyES,KAAKV,MAAMC,cAAc,GAAlG,iBACd,MACF,KAAK,EACHU,EAAiB,oBACjB,MAEF,QACEA,EAAc,UAAMD,KAAKV,MAAMC,cAAjB,iBAIlB,OAAOU,IApDX,oBAuDE,WAAU,IAAD,OACCV,EAAkBS,KAAKV,MAAvBC,cAER,OACE,sBAAKY,UAAU,MAAf,UACE,+BACGH,KAAKI,mBACLb,EAAcW,OAAS,EAEpB,wBACEG,KAAK,SACLF,UAAU,iBACVG,QAAS,kBACP,EAAKC,sBAJT,eAUC,MAEP,6BACGnB,EAAgBoB,KAAI,SAACf,GAAD,OACnB,qBACEU,UAAWM,IACT,oDACA,CACEC,OAAS,EAAKpB,MAAMC,cAAcG,SAASD,KAJjD,UASGA,EACD,gCACE,wBACEY,KAAK,SACLF,UAAU,4BACVG,QAAS,WACP,EAAKd,mBAAmBC,IAJ5B,iBASA,wBACEY,KAAK,SACLF,UAAU,iBACVG,QAAS,WACP,EAAKT,mBAAmBJ,IAJ5B,yBAbGA,eArFnB,GAAyBkB,IAAMC,WAoHhBvB,ICtIfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8a7fb1c9.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[]\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  chooseGoodsHandler = (item: string) => {\n    const { selectedGoods } = this.state;\n\n    if (!(selectedGoods.includes(item))) {\n      this.setState(prevState => ({\n        selectedGoods: [...prevState.selectedGoods, item],\n      }));\n    }\n  };\n\n  RemoveGoodsHandler = (item: string) => {\n    this.setState(prevState => ({\n      selectedGoods:\n       prevState.selectedGoods.filter(element => element !== item),\n    }));\n  };\n\n  resetSelectedGoods() {\n    this.setState({\n      selectedGoods: [],\n    });\n  }\n\n  showGoodsHandler() {\n    let SelectedValues = '';\n\n    switch (this.state.selectedGoods.length) {\n      case 1:\n        SelectedValues = `${this.state.selectedGoods} is selected`;\n        break;\n\n      case 2:\n        SelectedValues = `${this.state.selectedGoods[0]} and ${this.state.selectedGoods[1]} are selected`;\n        break;\n\n      case 3:\n        SelectedValues = `${this.state.selectedGoods[0]},${this.state.selectedGoods[1]}  and ${this.state.selectedGoods[2]} are selected`;\n        break;\n      case 0:\n        SelectedValues = 'No items selected';\n        break;\n\n      default:\n        SelectedValues = `${this.state.selectedGoods} are selected`;\n        break;\n    }\n\n    return SelectedValues;\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.showGoodsHandler()}\n          {selectedGoods.length > 0\n            ? (\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={() => (\n                  this.resetSelectedGoods()\n                )}\n              >\n                X\n              </button>\n            )\n            : ('')}\n        </h1>\n        <ul>\n          {goodsFromServer.map((item: string) => (\n            <li\n              className={classNames(\n                'd-flex justify-content-between align-items-center',\n                {\n                  active: (this.state.selectedGoods.includes(item)),\n                },\n              )}\n              key={item}\n            >\n              {item}\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"addButton btn btn-success\"\n                  onClick={() => {\n                    this.chooseGoodsHandler(item);\n                  }}\n                >\n                  Add\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => {\n                    this.RemoveGoodsHandler(item);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}